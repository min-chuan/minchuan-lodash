import{_ as e,c as a,o as s,a as r}from"./app.8d80b47d.js";const g=JSON.parse('{"title":"Function: merge()","description":"","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[{"level":3,"title":"T","slug":"t","link":"#t","children":[]},{"level":3,"title":"U","slug":"u","link":"#u","children":[]}]},{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[{"level":3,"title":"target","slug":"target","link":"#target","children":[]},{"level":3,"title":"source","slug":"source","link":"#source","children":[]}]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"relativePath":"api/object/functions/merge.md"}'),t={name:"api/object/functions/merge.md"},n=r(`<p><a href="./../../README.html"><strong>minchuan-lodash v1.0.1</strong></a></p><hr><p><a href="./../../README.html">minchuan-lodash</a> / <a href="./../README.html">object</a> / merge</p><h1 id="function-merge" tabindex="-1">Function: merge() <a class="header-anchor" href="#function-merge" aria-hidden="true">#</a></h1><blockquote><p><strong>merge</strong>&lt;<code>T</code>, <code>U</code>&gt;(<code>target</code>, <code>source</code>): <code>T</code> &amp; <code>U</code></p></blockquote><p>Defined in: <a href="https://github.com/min-chuan/minchuan-lodash/blob/a4de60df38bd27d9849a5a7c4f253a8bade854eb/src/object/index.ts#L25" target="_blank" rel="noreferrer">object/index.ts:25</a></p><p>\u5408\u5E76\u4E24\u4E2A\u5BF9\u8C61(\u6D45\u5408\u5E76)</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-hidden="true">#</a></h3><p><code>T</code> <em>extends</em> <code>object</code></p><p>\u76EE\u6807\u5BF9\u8C61\u7C7B\u578B</p><h3 id="u" tabindex="-1">U <a class="header-anchor" href="#u" aria-hidden="true">#</a></h3><p><code>U</code> <em>extends</em> <code>object</code></p><p>\u6E90\u5BF9\u8C61\u7C7B\u578B</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h2><h3 id="target" tabindex="-1">target <a class="header-anchor" href="#target" aria-hidden="true">#</a></h3><p><code>T</code></p><p>\u76EE\u6807\u5BF9\u8C61</p><h3 id="source" tabindex="-1">source <a class="header-anchor" href="#source" aria-hidden="true">#</a></h3><p><code>U</code></p><p>\u6E90\u5BF9\u8C61</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h2><p><code>T</code> &amp; <code>U</code></p><p>\u5408\u5E76\u540E\u7684\u65B0\u5BF9\u8C61</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#82AAFF;">merge</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;">// { a: 1, b: 2 }</span></span>
<span class="line"></span></code></pre></div>`,26),o=[n];function l(c,p,d,i,h,u){return s(),a("div",null,o)}const b=e(t,[["render",l]]);export{g as __pageData,b as default};
